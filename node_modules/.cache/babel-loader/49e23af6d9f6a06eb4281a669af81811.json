{"ast":null,"code":"var _jsxFileName = \"/home/qainfotech/Documents/IMP_Misc/squareboat/src/Components/forgetPassword.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport loginUser from '../API/login';\nimport VerifyPassword from './verifyPassword';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ForgetPassword(props) {\n  _s();\n\n  const [token, setToken] = useState('');\n\n  let submitForgetUser = async val => {\n    console.log(val);\n    await loginUser.get('/auth/resetpassword', {\n      params: {\n        email: val\n      }\n    }).then(response => {\n      if (response.data.success) {\n        // setToken();\n        console.log(data.data);\n        props.callToaster({\n          toastShow: true,\n          toastMsg: \"User Registered Successfully!\",\n          toastBG: \"success\"\n        });\n      }\n    }).catch(err => {\n      props.callToaster({\n        toastShow: true,\n        toastMsg: \"Something went wrong!\",\n        toastBG: \"danger\"\n      });\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(VerifyPassword, {\n      onSubmit: submitForgetUser\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ForgetPassword, \"ASU5DC/3PNAtDu6g7HTvQX3bJZs=\");\n\n_c = ForgetPassword;\nexport default ForgetPassword;\n\nvar _c;\n\n$RefreshReg$(_c, \"ForgetPassword\");","map":{"version":3,"sources":["/home/qainfotech/Documents/IMP_Misc/squareboat/src/Components/forgetPassword.js"],"names":["React","useState","loginUser","VerifyPassword","ForgetPassword","props","token","setToken","submitForgetUser","val","console","log","get","params","email","then","response","data","success","callToaster","toastShow","toastMsg","toastBG","catch","err"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA+B,OAA/B;AACA,OAAOC,SAAP,MAAsB,cAAtB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;;;AAEA,SAASC,cAAT,CAAwBC,KAAxB,EAA8B;AAAA;;AAE1B,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC,EAAD,CAAlC;;AAEA,MAAIO,gBAAgB,GAAG,MAAMC,GAAN,IAAa;AAChCC,IAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACA,UAAMP,SAAS,CAACU,GAAV,CACF,qBADE,EAEF;AACIC,MAAAA,MAAM,EAAG;AACLC,QAAAA,KAAK,EAACL;AADD;AADb,KAFE,EAQLM,IARK,CAQCC,QAAD,IAAc;AAChB,UAAGA,QAAQ,CAACC,IAAT,CAAcC,OAAjB,EAAyB;AACrB;AACAR,QAAAA,OAAO,CAACC,GAAR,CAAYM,IAAI,CAACA,IAAjB;AACAZ,QAAAA,KAAK,CAACc,WAAN,CAAkB;AAACC,UAAAA,SAAS,EAAC,IAAX;AAAgBC,UAAAA,QAAQ,EAAE,+BAA1B;AAA0DC,UAAAA,OAAO,EAAC;AAAlE,SAAlB;AACH;AACJ,KAdK,EAeLC,KAfK,CAeEC,GAAD,IAAO;AACVnB,MAAAA,KAAK,CAACc,WAAN,CAAkB;AAACC,QAAAA,SAAS,EAAC,IAAX;AAAgBC,QAAAA,QAAQ,EAAE,uBAA1B;AAAkDC,QAAAA,OAAO,EAAC;AAA1D,OAAlB;AACH,KAjBK,CAAN;AAmBH,GArBD;;AAuBA,sBACI;AAAA,2BAEI,QAAC,cAAD;AAAgB,MAAA,QAAQ,EAAEd;AAA1B;AAAA;AAAA;AAAA;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAQH;;GAnCQJ,c;;KAAAA,c;AAqCT,eAAeA,cAAf","sourcesContent":["import React,{ useState } from 'react';\nimport loginUser from '../API/login';\nimport VerifyPassword from './verifyPassword';\n\nfunction ForgetPassword(props){\n\n    const [token, setToken] = useState('');\n\n    let submitForgetUser = async val => {\n        console.log(val);\n        await loginUser.get(\n            '/auth/resetpassword',\n            {\n                params : {\n                    email:val\n                }\n            }\n        )\n        .then((response) => {\n            if(response.data.success){\n                // setToken();\n                console.log(data.data);\n                props.callToaster({toastShow:true,toastMsg: \"User Registered Successfully!\",toastBG:\"success\"});\n            }\n        })\n        .catch((err)=>{\n            props.callToaster({toastShow:true,toastMsg: \"Something went wrong!\",toastBG:\"danger\"});\n        });\n\n    }\n\n    return(\n        <div>\n            \n            <VerifyPassword onSubmit={submitForgetUser}></VerifyPassword>\n            \n        </div>\n    );\n\n}\n\nexport default ForgetPassword;"]},"metadata":{},"sourceType":"module"}