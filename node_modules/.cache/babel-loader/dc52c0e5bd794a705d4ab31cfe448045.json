{"ast":null,"code":"var _jsxFileName = \"/home/qainfotech/Documents/IMP_Misc/squareboat/src/Components/forgetPassword.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport loginUser from '../API/login';\nimport VerifyPassword from './verifyPassword';\nimport ResetPassword from './resetPassword';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ForgetPassword(props) {\n  _s();\n\n  const [token, setToken] = useState('');\n\n  let submitForgetUser = async val => {\n    await loginUser.get('/auth/resetpassword', {\n      params: {\n        email: val\n      }\n    }).then(response => {\n      if (response.data.success) {\n        setToken(response.data.data.token);\n      }\n    }).catch(err => {\n      props.callToaster({\n        toastShow: true,\n        toastMsg: \"Something went wrong!\",\n        toastBG: \"danger\"\n      });\n    });\n  };\n\n  let submitResetPass = async (newPass, confirmNewPass) => {\n    await loginUser.post('/auth/resetpassword', {\n      password: newPass,\n      confirmPassword: confirmNewPass,\n      token: token\n    }).then(response => {\n      if (response.data.success) {\n        setToken('');\n        props.callToaster({\n          toastShow: true,\n          toastMsg: response.data.data.message,\n          toastBG: \"success\"\n        });\n      }\n    }).catch(err => {\n      props.callToaster({\n        toastShow: true,\n        toastMsg: \"Something went wrong!\",\n        toastBG: \"danger\"\n      });\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: token != '' ? /*#__PURE__*/_jsxDEV(ResetPassword, {\n      onReset: submitResetPass\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(VerifyPassword, {\n      onSubmit: submitForgetUser\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ForgetPassword, \"ASU5DC/3PNAtDu6g7HTvQX3bJZs=\");\n\n_c = ForgetPassword;\nexport default ForgetPassword;\n\nvar _c;\n\n$RefreshReg$(_c, \"ForgetPassword\");","map":{"version":3,"sources":["/home/qainfotech/Documents/IMP_Misc/squareboat/src/Components/forgetPassword.js"],"names":["React","useState","loginUser","VerifyPassword","ResetPassword","ForgetPassword","props","token","setToken","submitForgetUser","val","get","params","email","then","response","data","success","catch","err","callToaster","toastShow","toastMsg","toastBG","submitResetPass","newPass","confirmNewPass","post","password","confirmPassword","message"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA+B,OAA/B;AACA,OAAOC,SAAP,MAAsB,cAAtB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,aAAP,MAA0B,iBAA1B;;;AAEA,SAASC,cAAT,CAAwBC,KAAxB,EAA8B;AAAA;;AAE1B,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAAC,EAAD,CAAlC;;AAEA,MAAIQ,gBAAgB,GAAG,MAAMC,GAAN,IAAa;AAChC,UAAMR,SAAS,CAACS,GAAV,CACF,qBADE,EAEF;AACIC,MAAAA,MAAM,EAAG;AACLC,QAAAA,KAAK,EAACH;AADD;AADb,KAFE,EAQLI,IARK,CAQCC,QAAD,IAAc;AAChB,UAAGA,QAAQ,CAACC,IAAT,CAAcC,OAAjB,EAAyB;AACrBT,QAAAA,QAAQ,CAACO,QAAQ,CAACC,IAAT,CAAcA,IAAd,CAAmBT,KAApB,CAAR;AACH;AACJ,KAZK,EAaLW,KAbK,CAaEC,GAAD,IAAO;AACVb,MAAAA,KAAK,CAACc,WAAN,CAAkB;AAACC,QAAAA,SAAS,EAAC,IAAX;AAAgBC,QAAAA,QAAQ,EAAE,uBAA1B;AAAkDC,QAAAA,OAAO,EAAC;AAA1D,OAAlB;AACH,KAfK,CAAN;AAiBH,GAlBD;;AAoBA,MAAIC,eAAe,GAAG,OAAOC,OAAP,EAAeC,cAAf,KAAkC;AACpD,UAAMxB,SAAS,CAACyB,IAAV,CACF,qBADE,EAEF;AACIC,MAAAA,QAAQ,EAACH,OADb;AAEII,MAAAA,eAAe,EAACH,cAFpB;AAGInB,MAAAA,KAAK,EAACA;AAHV,KAFE,EAQLO,IARK,CAQCC,QAAD,IAAc;AAChB,UAAGA,QAAQ,CAACC,IAAT,CAAcC,OAAjB,EAAyB;AACrBT,QAAAA,QAAQ,CAAC,EAAD,CAAR;AACAF,QAAAA,KAAK,CAACc,WAAN,CAAkB;AAACC,UAAAA,SAAS,EAAC,IAAX;AAAgBC,UAAAA,QAAQ,EAAEP,QAAQ,CAACC,IAAT,CAAcA,IAAd,CAAmBc,OAA7C;AAAqDP,UAAAA,OAAO,EAAC;AAA7D,SAAlB;AACH;AACJ,KAbK,EAcLL,KAdK,CAcEC,GAAD,IAAO;AACVb,MAAAA,KAAK,CAACc,WAAN,CAAkB;AAACC,QAAAA,SAAS,EAAC,IAAX;AAAgBC,QAAAA,QAAQ,EAAE,uBAA1B;AAAkDC,QAAAA,OAAO,EAAC;AAA1D,OAAlB;AACH,KAhBK,CAAN;AAkBH,GAnBD;;AAqBA,sBACI;AAAA,cAEQhB,KAAK,IAAI,EAAT,gBACA,QAAC,aAAD;AAAe,MAAA,OAAO,EAAEiB;AAAxB;AAAA;AAAA;AAAA;AAAA,YADA,gBAEA,QAAC,cAAD;AAAgB,MAAA,QAAQ,EAAEf;AAA1B;AAAA;AAAA;AAAA;AAAA;AAJR;AAAA;AAAA;AAAA;AAAA,UADJ;AAWH;;GAxDQJ,c;;KAAAA,c;AA0DT,eAAeA,cAAf","sourcesContent":["import React,{ useState } from 'react';\nimport loginUser from '../API/login';\nimport VerifyPassword from './verifyPassword';\nimport ResetPassword from './resetPassword';\n\nfunction ForgetPassword(props){\n\n    const [token, setToken] = useState('');\n\n    let submitForgetUser = async val => {\n        await loginUser.get(\n            '/auth/resetpassword',\n            {\n                params : {\n                    email:val\n                }\n            }\n        )\n        .then((response) => {\n            if(response.data.success){\n                setToken(response.data.data.token);\n            }\n        })\n        .catch((err)=>{\n            props.callToaster({toastShow:true,toastMsg: \"Something went wrong!\",toastBG:\"danger\"});\n        });\n\n    }\n\n    let submitResetPass = async (newPass,confirmNewPass) => {\n        await loginUser.post(\n            '/auth/resetpassword',\n            {\n                password:newPass,\n                confirmPassword:confirmNewPass,\n                token:token\n            }\n        )\n        .then((response) => {\n            if(response.data.success){\n                setToken('');\n                props.callToaster({toastShow:true,toastMsg: response.data.data.message,toastBG:\"success\"});\n            }\n        })\n        .catch((err)=>{\n            props.callToaster({toastShow:true,toastMsg: \"Something went wrong!\",toastBG:\"danger\"});\n        });\n\n    }\n\n    return(\n        <div>\n            {\n                token != '' ?\n                <ResetPassword onReset={submitResetPass} ></ResetPassword> :\n                <VerifyPassword onSubmit={submitForgetUser}></VerifyPassword>\n            }\n            \n        </div>\n    );\n\n}\n\nexport default ForgetPassword;"]},"metadata":{},"sourceType":"module"}